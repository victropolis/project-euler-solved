package com.victropolis.euler;

import org.junit.Assert;
import org.junit.Test;

/**
 * Generated programatically by victropolis on 07/04/15.
 */
public class TestProblem297 {
/*

Description (from https://projecteuler.net/problem=297):

Each new term in the Fibonacci sequence is generated by adding the previous two terms. Starting with 1 and 2, the
first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89. Every positive integer can be uniquely written as a sum of
 nonconsecutive terms of the Fibonacci sequence. For example, 100 = 3 + 8 + 89. Such a sum is called the Zeckendorf
 representation of the number. For any integer n&gt;0, let z(n) be the number of terms in the Zeckendorf
 representation of n. Thus, z(5) = 1, z(14) = 2, z(100) = 3 etc. Also, for 0&lt;n&lt;106, ∑ z(n) = 7894453. Find ∑ z
 (n) for 0&lt;n&lt;1017.

*/

    @Test
    public void test() {
        Assert.assertEquals(2252639041804718029L, Problem297.solve(/* change signature to provide required inputs */));
    }
}

