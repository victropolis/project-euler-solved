package com.victropolis.euler;

/**
 * Created by victropolis on 6/12/15.
 */
public class Problem012 extends BaseProblem {
    /*
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be
    1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred divisors?
    */
    public static long solve(long threshold) {
        long answer = 0;

        for (long x = 1; answer == 0; x++) {
            long sum = sum(x);

            if (!isPrime(sum) && countDivisors(sum) > threshold) {
                answer = sum;
            }
        }

        return answer;
    }

    private static long countDivisors(long sum) {
        long divisors;
        if (sum == 1) {
            divisors = 1;
        } else if (sum == 2 || sum == 3) {
            divisors = 2;
        } else {
            divisors = 0;
            int y = 1;
            int sqrt = (int) Math.sqrt(sum);
            do {
                if (sum % y == 0) {
                    divisors += 2;
                }
            } while (++y <= sqrt);

            if (sqrt * sqrt == sum) {
                --divisors;
            }
        }

        return divisors;
    }

}